@import '../variables.less';
@import '../mixins.less';

.statusError(@rules) {
  &.ui-input-status-error:not(.ui-input-disabled) {
    background: none;
    @rules();
    &:hover {
      background: none;
      @rules();
    }
  }
}

.notInputDisabledHover(@rules) {
  &:not(.ui-input-disabled):hover {
    @rules();
  }
}

.notInputDisabledActive(@rules) {
  &:not(.ui-input-disabled):active {
    @rules();
  }
}

.notInputDisabledFocus(@rules) {
  // &:not(.ui-input-disabled):focus {
  //   @rules();
  // }
}

.notInputDisabledFocusWithIn(@rules) {
  &:not(.ui-input-disabled):focus-within {
    @rules();
  }
  &:not(.ui-input-disabled):focus {
    @rules();
  }
}

textarea.ui-input {
  padding: 8px 10px;
  .notInputDisabledFocus({
    border-color: @border-base-quaternary !important;
    background-color: @bg-base-container;
    box-shadow: none !important;
  });
}

.ui-input {
  box-shadow: none !important;
  border-radius: 8px;

  .ui-input-number-input {
    padding: 0;
  }

  &.ui-input-textarea-affix-wrapper {
    height: auto;

    &.ui-input-textarea-show-count {
      textarea {
        padding-bottom: 30px;
      }
      .ui-input-data-count {
        bottom: 5px;
        right: 10px;
      }
    }
  }

  &-sm {
    padding: 0px 6px;
    height: 24px;
    font-size: 12px;
    .ui-input-number-input {
      height: 22px;
    }
    input::placeholder {
      font-size: 12px;
    }
  }

  &-md {
    padding: 0px 8px;
    height: 28px;
    .ui-input-number-input {
      height: 26px;
    }
  }
  &-lg {
    padding: 0px 10px;
    height: 32px;
    .ui-input-number-input {
      height: 30px;
    }
  }
  &-xl {
    padding: 0px 12px;
    height: 36px;
    .ui-input-number-input {
      height: 34px;
    }
  }
  &-xxl {
    padding: 0px 12px;
    height: 40px;
    .ui-input-number-input {
      height: 38px;
    }
  }
  &-type {
    &-border {
      background: none;
      border-color: @border-base-secondary;
      .notInputDisabledHover({
        border-color: @border-base-tertiary;
        background-color: @bg-fill-deep-default;
      });
      .notInputDisabledFocusWithIn({
        border-color: @border-base-quaternary !important;
        background-color: @bg-base-container;
      });
      .notInputDisabledFocus({
        border-color: @border-info-default;
        box-shadow: 0 0 4px 0 @bg-info-quaternary !important;
      });
      .statusError({
        border-color: @border-error-default !important;
      });
    }

    &-borderless {
      border-radius: 0;
      padding-left: 0 !important;
      padding-right: 0 !important;
      border-color: transparent !important;
      background-color: transparent !important;

      .notInputDisabledHover({
        input::placeholder {
          text-decoration: underline; /* 添加下划线 */
          text-decoration-color: @text-base-tertiary; /* 下划线颜色（可选） */
          text-decoration-thickness: 1px; /* 下划线粗细（可选） */
          text-underline-offset: 2px; /* 下划线与文字的距离（可选） */
        }
      });

      --underline-color: @border-base-quaternary;

      &::after {
        content: '';
        /* 下划线样式 */
        position: absolute;
        bottom: 0;
        left: 50%; /* 初始位置在中间 */
        width: 0; /* 初始宽度为0 */
        height: 1px;
        background-color: var(--underline-color); /* 下划线颜色 */

        /* 动画过渡效果 */
        transition: all 0.2s ease;
        transform-origin: center;
      }

      .notInputDisabledFocusWithIn({
        &::after {
          width: 100%; /* 展开到 full width */
          left: 0; /* 回到左侧起点 */
        }
      });

      .notInputDisabledFocus({
        --underline-color: @border-info-default;
        background-color: @bg-info-default;
        &::after {
          width: 100%; /* 展开到 full width */
          left: 0; /* 回到左侧起点 */
        }
      });

      .statusError({
        border-color: @border-error-default;
        --underline-color: @border-error-default;

        &::after {
          width: 100%; /* 展开到 full width */
          left: 0; /* 回到左侧起点 */
        }
      });
    }

    &-filledsecondary {
      background-color: @bg-fill-deep-secondary;
      border-color: transparent;

      .notInputDisabledHover({
        // box-shadow: inset 0 0 0 1px @border-base-tertiary !important;
        background-color: @bg-fill-deep-tertiary;
        border-color: @border-base-tertiary
      });

      .notInputDisabledFocusWithIn({
        border-color: @border-base-quaternary;
        background-color: @bg-base-container;
      });
      .notInputDisabledFocus({
        border-color: @border-info-default;
        box-shadow: 0 0 4px 0 @bg-info-quaternary !important;
      });

      .statusError({
        background: @border-error-secondary !important;
      });
    }

    &-filledbase {
      background-color: @bg-base-container;
      border-color: transparent;
      .notInputDisabledHover({
        background-color: @bg-base-container-secondary;
        border-color: transparent;
      });

      .notInputDisabledFocusWithIn({
        border-color: @border-base-quaternary;
        background-color: @bg-base-container;
      });
      .notInputDisabledFocus({
        border-color: @border-info-default;
        box-shadow: 0 0 4px 0 @bg-info-quaternary !important;
      });

      .statusError({
        background: @border-error-secondary !important;
      });
    }
  }
}
